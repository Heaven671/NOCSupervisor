"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/snmp";
exports.ids = ["pages/api/snmp"];
exports.modules = {

/***/ "net-snmp":
/*!***************************!*\
  !*** external "net-snmp" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("net-snmp");

/***/ }),

/***/ "(api)/./pages/api/snmp.tsx":
/*!****************************!*\
  !*** ./pages/api/snmp.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nvar snmp = __webpack_require__(/*! net-snmp */ \"net-snmp\");\nasync function handler(req, res) {\n    console.log(req.query);\n    var session = snmp.createSession(`${req.query.network}`, \"public\");\n    var oids = [\n        \"1.3.6.1.2.1.1.5.0\",\n        \"1.3.6.1.2.1.1.6.0\"\n    ];\n    //var sysUptime = [\"1.3.6.1.4.1.2021.10.1.3.1\"];\n    var oid = [\n        `${req.query.oid}`\n    ];\n    let ret = {};\n    if (req.query.req == \"get\") {\n        session.get(oid, function(error, varbinds) {\n            if (error) {\n                console.error(error);\n            } else {\n                for(var i = 0; i < varbinds.length; i++){\n                    if (snmp.isVarbindError(varbinds[i])) {\n                        console.error(snmp.varbindError(varbinds[i]));\n                    } else {\n                        console.log(varbinds[i].oid + \" = \" + varbinds[i].value);\n                        ret = varbinds[i].value;\n                    }\n                }\n                res.send(JSON.stringify(ret));\n            }\n        });\n    } else if (req.query.req == \"walk\") {\n        console.log(\"waaaaaaalk\");\n        let ret1 = [\n            {}\n        ];\n        function doneCb(error) {\n            if (error) console.error(error.toString());\n        }\n        function feedCb(varbinds) {\n            for(var i = 0; i < varbinds.length; i++){\n                if (snmp.isVarbindError(varbinds[i])) console.error(snmp.varbindError(varbinds[i]));\n                else {\n                    if (varbinds[i].oid == \"1.3.6.1.2.1.2.2.1.10.200\") {\n                        session.close();\n                        res.send(ret1);\n                        break;\n                    }\n                    ret1.push([\n                        {\n                            \"oid\": varbinds[i].oid,\n                            \"value\": varbinds[i].value\n                        }\n                    ]);\n                    console.log(varbinds[i].oid + \"|\" + varbinds[i].value);\n                }\n            }\n        }\n        var maxRepetitions = 1;\n        var oid2 = `${req.query.oid}`;\n        session.walk(oid2, maxRepetitions, feedCb, doneCb);\n    } else if (req.query.req == \"getNext\") {\n        ret = [\n            \"\"\n        ];\n        var oid3 = [\n            `${req.query.oid}`,\n            \"1.3.6.1.2.1.2.2.1.10.200\"\n        ];\n        var nonRepeaters = 0;\n        session.getBulk(oid3, nonRepeaters, function(error, varbinds) {\n            if (error) {\n                console.error(error.toString());\n            } else {\n                // step through the non-repeaters which are single varbinds\n                for(var i = 0; i < nonRepeaters; i++){\n                    if (i >= varbinds.length) break;\n                    if (snmp.isVarbindError(varbinds[i])) console.error(snmp.varbindError(varbinds[i]));\n                    else console.log(varbinds[i].oid + \"|\" + varbinds[i].value);\n                }\n                // then step through the repeaters which are varbind arrays\n                for(var i = nonRepeaters; i < varbinds.length; i++){\n                    for(var j = 0; j < varbinds[i].length; j++){\n                        if (snmp.isVarbindError(varbinds[i][j])) console.error(snmp.varbindError(varbinds[i][j]));\n                        else console.log(varbinds[i][j].oid + \"=\" + varbinds[i][j].value);\n                        ret += varbinds[i][j].value;\n                    }\n                }\n            }\n        });\n        console.log(ret);\n        res.send(JSON.stringify(ret));\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/snmp.tsx\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/snmp.tsx"));
module.exports = __webpack_exports__;

})();